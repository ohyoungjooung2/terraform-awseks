oyj@controller:~/prac/sprboot-actuator$ git clone git@github.com:ohyoungjooung2/actuator-sample.git
oyj@controller:~/prac/sprboot-actuator/actuator-sample$ mvn --version
Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-18T03:33:14+09:00)
Maven home: /home/oyj/study_java/apache-maven-3.5.4
Java version: 1.8.0_252, vendor: Private Build, runtime: /usr/lib/jvm/java-8-openjdk-amd64/jre
Default locale: en_US, platform encoding: UTF-8
OS name: "linux", version: "5.3.0-62-generic", arch: "amd64", family: "unix"


oyj@controller:~/prac/sprboot-actuator/actuator-sample$ mvn package -B

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.6.RELEASE)

[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 11.960 s
[INFO] Finished at: 2020-07-07T02:43:58+09:00
[INFO] ------------------------------------------------------------------------

oyj@controller:~/prac/sprboot-actuator/actuator-sample$ docker build -t java-actuator .
Sending build context to Docker daemon  18.58MB
Step 1/4 : FROM openjdk:8u111-jdk-alpine
 ---> 3fd9dd82815c
Step 2/4 : VOLUME /tmp
 ---> Using cache
 ---> e0c6ed17e171
Step 3/4 : ADD /target/actuator-sample-0.0.1-SNAPSHOT.jar app.jar
 ---> 2184d373de18
Step 4/4 : ENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]
 ---> Running in d840e0468550
Removing intermediate container d840e0468550
 ---> 5465e13813a0
Successfully built 5465e13813a0
Successfully tagged java-actuator:latest



oyj@controller:~/prac/sprboot-actuator/actuator-sample$ aws ecr create-repository --repository-name java-actuator --image-tag-mutability IMMUTABLE
{
    "repository": {
        "repositoryArn": "arn:aws:ecr:ap-northeast-2:494307375889:repository/java-actuator",
        "registryId": "494307375889",
        "repositoryName": "java-actuator",
        "repositoryUri": "494307375889.dkr.ecr.ap-northeast-2.amazonaws.com/java-actuator",
        "createdAt": "2020-07-07T02:30:27+09:00",
        "imageTagMutability": "IMMUTABLE",
        "imageScanningConfiguration": {
            "scanOnPush": false
        }
    }
}






oyj@controller:~/prac/sprboot-actuator$ aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 494307375889.dkr.ecr.ap-northeast-2.amazonaws.com

oyj@controller:~/prac/sprboot-actuator/actuator-sample$ docker tag java-actuator:latest 494307375889.dkr.ecr.ap-northeast-2.amazonaws.com/java-actuator:latestoyj@controller:~/prac/sprboot-actuator/actuator-sample$ 

oyj@controller:~/prac/sprboot-actuator/actuator-sample$ docker push 494307375889.dkr.ecr.ap-northeast-2.amazonaws.com/java-actuator:latest
The push refers to repository [494307375889.dkr.ecr.ap-northeast-2.amazonaws.com/java-actuator]
cf4a9fab71fd: Pushed 
a1e7033f082e: Pushed 
78075328e0da: Pushed 
9f8566ee5135: Pushed 
latest: digest: sha256:4af9935320853930fdd5210028b8201ce22c35f07e31b9273a0a39b20b6e874d size: 1159



#EKS create
oyj@controller:~/prac/awseks$git clone git@github.com:ohyoungjooung2/terraform-awseks.git
oyj@controller:~/prac/awseks$ cd terraform-awseks/

oyj@controller:~/prac/awseks/terraform-awseks$ terraform init .
Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary
oyj@controller:~/prac/awseks/terraform-awseks$ bash apply.sh
#It is gonna take a while.
.........................
.........................
.........................

Apply complete! Resources: 32 added, 32 changed, 32 destroyed.


oyj@controller:~/prac/awseks/terraform-awseks$ bash eks-kctl.sh 
Updated context arn:aws:eks:ap-northeast-2:494307375889:cluster/terraform-eks-demo in /home/oyj/.kube/config2

oyj@controller:~/prac/awseks/terraform-awseks$ kubectl get nodes
NAME                                           STATUS   ROLES    AGE   VERSION
ip-10-0-2-78.ap-northeast-2.compute.internal   Ready    <none>   28m   v1.16.8-eks-fd1ea7
ip-10-0-3-51.ap-northeast-2.compute.internal   Ready    <none>   28m   v1.16.8-eks-fd1ea7

#Confirm default pods in kube-system namespace.
oyj@controller:~/prac/awseks/terraform-awseks$ kubectl get po -n kube-system
NAME                       READY   STATUS    RESTARTS   AGE
aws-node-f5w6m             1/1     Running   0          29m
aws-node-kq85c             1/1     Running   0          29m
coredns-7b64b848fd-bhvn8   1/1     Running   0          33m
coredns-7b64b848fd-l47b8   1/1     Running   0          33m
kube-proxy-fspnl           1/1     Running   0          29m
kube-proxy-q2lb7           1/1     Running   0          29m
oyj@controller:~/prac/awseks/terraform-awseks$ 


oyj@controller:~/prac/sprboot-actuator/actuator-sample$ cat actuator-svc.yaml 
apiVersion: v1
kind: Service
metadata:
  name: actuator-sample
  labels:
    app: actuator-sample
spec:
  ports:
    - port: 8082
  selector:
    app: actuator-sample
  type: NodePort
  ports:
  - port: 8073
    nodePort: 32338
    targetPort: 8082
    protocol: TCP
    name: http
oyj@controller:~/prac/sprboot-actuator/actuator-sample$ cat actuator-dp-ecr.yaml 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: actuator-sample
  namespace: default
  labels:
     app: actuator-sample
spec:
  replicas: 2
  selector:
    matchLabels:
      app: actuator-sample
  template:
     metadata:
       labels:
         app: actuator-sample
     spec:
       containers:
       - name: actuator-sample
         image: 494307375889.dkr.ecr.ap-northeast-2.amazonaws.com/java-actuator:latest2
         imagePullPolicy: Always
         ports:
         - containerPort: 8082
       #imagePullSecrets:
       #  - name: regcred


oyj@controller:~/prac/sprboot-actuator/actuator-sample$ kubectl create -f actuator-svc.yaml -f actuator-dp-ecr.yaml 
service/actuator-sample created
deployment.apps/actuator-sample created
oyj@controller:~/prac/sprboot-actuator/actuator-sample$ 

oyj@controller:~/prac/sprboot-actuator/actuator-sample$ kubectl get svc
NAME              TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
actuator-sample   NodePort    172.20.112.70   <none>        8073:32338/TCP   18s
kubernetes        ClusterIP   172.20.0.1      <none>        443/TCP          40m
oyj@controller:~/prac/sprboot-actuator/actuator-sample$ 

oyj@controller:~/prac/sprboot-actuator/actuator-sample$ kubectl get po
NAME                               READY   STATUS    RESTARTS   AGE
actuator-sample-865647bc5f-6tb8s   1/1     Running   0          45s
actuator-sample-865647bc5f-j989h   1/1     Running   0          45s
oyj@controller:~/prac/sprboot-actuator/actuator-sample$ 

#Pod check.
oyj@controller:~/prac/sprboot-actuator/actuator-sample$ kubectl exec -it actuator-sample-865647bc5f-6tb8s -- sh
/ # ls
app.jar  bin      dev      etc      home     lib      linuxrc  media    mnt      proc     root     run      sbin     srv      sys      tmp      usr      var
/ # ps aux
PID   USER     TIME   COMMAND
    1 root       0:12 java -Djava.security.egd=file:/dev/./urandom -jar /app.jar
   56 root       0:00 sh
   65 root       0:00 ps aux
/ # 


/ # netstat -tpln
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        0      0 0.0.0.0:8082            0.0.0.0:*               LISTEN      1/java
/ # 



Last)Destroy test
oyj@controller:~/prac/awseks/terraform-awseks$ cat delete.sh 

#!/usr/bin/env bash
terraform destroy --force
sleep 1
#For nodegroup terraform bug? again, execute below command
terraform destroy --force

oyj@controller:~/prac/awseks/terraform-awseks$ bash delete.sh 
aws_iam_role.eksrole: Destroying... [id=eksrole]
aws_iam_role.eksrole: Destruction complete after 2s



Destroy complete! Resources: 10 destroyed.





oyj@controller:~/prac/awseks$ aws iam create-policy \
>     --policy-name ALBIngressControllerIAMPolicy \
>     --policy-document file://iam-policy.json
{
    "Policy": {
        "PolicyName": "ALBIngressControllerIAMPolicy",
        "PolicyId": "ANPAXGFYD7MI4SARMBTB4",
        "Arn": "arn:aws:iam::494307375889:policy/ALBIngressControllerIAMPolicy",
        "Path": "/",
        "DefaultVersionId": "v1",
        "AttachmentCount": 0,
        "PermissionsBoundaryUsageCount": 0,
        "IsAttachable": true,
        "CreateDate": "2020-07-06T21:50:10+00:00",
        "UpdateDate": "2020-07-06T21:50:10+00:00"
    }
}
